name: Generate & Deploy Sites

# allow this workflow to push back to the repo
permissions:
  contents: write

on:
  push:
    branches: [ main ]

  schedule:
    # every 15 minutes (testing)
    - cron: '*/15 * * * *'
    # daily at 01:00 UTC
    - cron: '0 1 * * *'
    # weekly on Monday at 04:00 UTC
    - cron: '0 4 * * 1'

  workflow_dispatch:

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          # so that pushes use the GITHUB_TOKEN
          persist-credentials: true
          # fetch full history so we can commit onto main
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install \
            python-frontmatter \
            markdown \
            jinja2 \
            pandas \
            python-slugify \
            python-dotenv \
            openai \
            requests

      - name: Generate Posts (OpenAI)
        run: python scripts/generate_post.py

      - name: Commit new post Markdown
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add content/post
          # only commit if there are any new files
          if git diff --cached --quiet; then
            echo "✔️  No new posts to commit"
          else
            git commit -m "chore: add new post from schedule"
            git push origin main
          fi

      - name: Build Site (Jinja2)
        run: python scripts/build_site.py

      - name: Generate RSS Feed
        run: python scripts/generate_rss.py

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Deploy to Firebase Hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: firebase deploy --only hosting

# .github/workflows/ci.yml
name: Generate & Deploy Site

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '*/15 * * * *'   # for testing
    - cron: '0 1 * * *'
    - cron: '0 4 * * 1'
  workflow_dispatch:

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        # allow pushing back to the repo
        with:
          persist-credentials: true

      - name: Set up Python
        uses: actions/setup-python@v4
        with: { python-version: '3.10' }

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install \
            requests \
            python-frontmatter \
            markdown \
            jinja2 \
            pandas \
            python-slugify \
            python-dotenv \
            openai

      - name: Generate Posts (OpenAI)
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_MODEL: gpt-4.1-nano
        run: python scripts/generate_post.py

      - name: Commit new post Markdown
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "actions@github.com"
          # only commit if there's anything new in content/post
          git add content/post
          if ! git diff --cached --quiet; then
            git commit -m "chore: add new post from schedule"
            git push origin main
          else
            echo "No changes to content/post/, skipping commit."
          fi

      - name: Build Site (Jinja2)
        run: python scripts/build_site.py

      - name: Generate RSS Feed
        run: python scripts/generate_rss.py

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with: { node-version: '20.x' }

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Deploy to Firebase Hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: firebase deploy --only hosting
